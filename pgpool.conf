pool_passwd                    = '/etc/pgpool-II/pool_passwd'
auth_type                      = 'md5'
enable_pool_hba                = off
authentication_timeout         = 60

#--- Connection Settings ---

listen_addresses                = '*'
port                            = 9999

#--- pcp connection Settings ---

pcp_socket_dir                  = '/tmp'
pcp_listen_addresses            = '*'
pcp_port                        = 9898

#--- Replication stuff

sr_check_period         = 10
sr_check_user           = 'replicator'
sr_check_password       = ''
sr_check_database       = 'postgres'



#--- Load Balancing and Query Routing ---

load_balance_mode               = on
reset_query_on_pool_release     = on
replicate_on_reset              = on

#--- Backend Server Configuration ---

backend_hostname0               = 'pg1'
backend_port0                   = 5432
backend_weight0                 = 1
backend_flag0                   = 'ALLOW_TO_FAILOVER'
backend_data_directory0         = '/pgdata/17/data'
backend_clustering_mode0        = 'streaming_replication'
backend_application_name0       = 'pg1'

backend_hostname1               = 'pg2'
backend_port1                   = 5432
backend_weight1                 = 1
backend_flag1                   = 'ALLOW_TO_FAILOVER'
backend_data_directory1         = '/pgdata/17/data'
backend_clustering_mode1        = 'streaming_replication'
backend_application_name1       = 'pg2'

backend_hostname2               = 'pg3'
backend_port2                   = 5432
backend_weight2                 = 1
backend_flag2                   = 'ALLOW_TO_FAILOVER'
backend_data_directory2         = '/pgdata/17/data'
backend_clustering_mode2        = 'streaming_replication'
backend_application_name2       = 'pg3'

#--- failover and recovery info

failover_on_backend_error        = on
failover_command                 = '/etc/pgpool-II/failover.sh %d %h %p %D %m %H %M %P %r %R %N %S'
follow_primary_command           = '/etc/pgpool-II/follow_primary.sh %d %h %p %D %m %H %M %P %r %R'
recovery_user                    = 'postgres'
recovery_password                = 'postgres'
recovery_1st_stage_command       = 'recovery_1st_stage'


#--- Watchdog stuff ---

health_check_user                = 'pgpool'
health_check_password            = 'pgpool'
health_check_database            = 'template1'


use_watchdog                      = on
delegate_ip                       = '172.28.0.100'
if_up_cmd                         = '/usr/bin/sudo /usr/sbin/ip addr add 172.28.0.100/24 dev eth0'
if_down_cmd                       = '/usr/bin/sudo /usr/sbin/ip addr del 172.28.0.100/24 dev eth0'
arping_cmd                        = '/usr/bin/sudo /usr/sbin/arping -U 172.28.0.100 -w 1 -I eth0'

wd_interval                      = 20 # How often to run a check in seconds

wd_lifecheck_method              = 'query'
wd_lifecheck_query               = 'SELECT 1'
wd_lifecheck_dbname              = 'template1'
wd_lifecheck_user                = 'pgpool'
wd_lifecheck_password            = 'pgpool'
wd_life_point                    = 5   # number of times to retry a failed life check

hostname0                        = 'wd1'
wd_port0                         = 9000
pgpool_port0                     = 9999

hostname1                        = 'wd2'
wd_port1                         = 9000
pgpool_port1                     = 9999

hostname2                        = 'pg1'
wd_port2                         = 9000
pgpool_port2                     = 9999

hostname3                        = 'pg2'
wd_port3                         = 9000
pgpool_port3                     = 9999

hostname4                        = 'pg3'
wd_port4                         = 9000
pgpool_port4                     = 9999

#--- disable cache

statement_cache_mode             = off
query_cache_mode                 = off

#--- logging info

logging_collector                = on
log_min_message                  = DEBUG1
log_destination                  = 'stderr'
log_line_prefix                  = '%m: %a pid %p: '
log_directory                    = '/var/log/pgpool_log'
log_filename                     = 'pgpool-%a.log'
log_truncate_on_rotation         = on
log_rotation_age                 = 1d
log_rotation_size                = 0
log_per_node_statement           = on
notice_per_node_statement        = on
